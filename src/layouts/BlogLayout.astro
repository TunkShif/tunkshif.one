---
import type { Frontmatter } from "../types"
import Layout from "@layouts/Layout.astro"
import dayjs from "dayjs"
import "katex/dist/katex.css"
import "prism-themes/themes/prism-one-dark.css"
import "../styles/prose.css"

const { title, tags, pubDate } = Astro.props.frontmatter as Frontmatter
---

<Layout title={`${title} - tunkshif.one`}>
  <main>
    <h1 class="text-4xl font-extrabold">{title}</h1>
    <div class="my-4 flex justify-between items-center">
      <ul class="flex space-x-2">
        {
          tags.map(tag => (
            <li>
              <span
                class:list={[
                  "rounded-sm px-2 py-1 text-sm font-medium text-gray-500 dark:text-gray-200",
                  "bg-gray-200 bg-opacity-60 hover:bg-opacity-100 dark:bg-gray-800 dark:bg-opacity-60 dark:hover:bg-opacity-100"
                ]}
              >
                #{tag}
              </span>
            </li>
          ))
        }
      </ul>
      <time class="text-sm text-gray-600 dark:text-gray-400">
        {dayjs(pubDate).format("YYYY-MM-DD")}
      </time>
    </div>
    <article
      class:list={[
        "mx-auto max-w-4xl prose dark:prose-invert",
        "prose-blockquote:font-normal prose-blockquote:not-italic",
        "prose-code:px-1 prose-code:font-normal prose-code:font-mono prose-code:rounded-sm",
        "prose-code:bg-gray-100 prose-code:text-gray-700",
        "dark:prose-code:bg-[#1e293b] dark:prose-code:text-[rgb(171,178,191)]"
      ]}
    >
      <slot />
    </article>
    <section class="mt-8">
      <div class="giscus"></div>
    </section>
  </main>
  <script is:inline>
    const giscusTheme = localStorage.theme === "dark" ? "dark_dimmed" : "light"
    const giscusConfig = {
      src: "https://giscus.app/client.js",
      "data-repo": "TunkShif/tunkshif.one",
      "data-repo-id": "R_kgDOG7vTNQ",
      "data-category": "General",
      "data-category-id": "DIC_kwDOG7vTNc4CRPRi",
      "data-mapping": "pathname",
      "data-strict": "0",
      "data-reactions-enabled": "1",
      "data-emit-metadata": "0",
      "data-input-position": "bottom",
      "data-theme": giscusTheme,
      "data-lang": "en",
      "data-loading": "lazy",
      crossorigin: "anonymous",
      async: ""
    }
    const giscusScript = document.createElement("script")
    Object.entries(giscusConfig).forEach(([key, value]) => giscusScript.setAttribute(key, value))
    document.body.appendChild(giscusScript)

    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark")
      const iframe = document.querySelector("iframe.giscus-frame")
      if (!iframe) return
      iframe.contentWindow.postMessage(
        {
          giscus: {
            setConfig: {
              theme: isDark ? "dark_dimmed" : "light"
            }
          }
        },
        "https://giscus.app"
      )
    })
    observer.observe(document.documentElement, { attributes: true })
  </script>
</Layout>
